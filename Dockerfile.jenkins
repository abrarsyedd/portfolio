# Start from the official Jenkins LTS image
FROM jenkins/jenkins:lts

# Switch to root user to perform installations
USER root

# Install dependencies (apt-transport-https, ca-certificates, curl, gnupg, lsb-release)
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    # Install git, which is often missing in the base image and needed for the pipeline
    git

# 1. Install Docker CLI (client)
# Add Docker's official GPG key
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
# Add Docker repository
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
# Install the Docker CLI client (only the client, as we will use the host's daemon via socket)
RUN apt-get update && apt-get install -y docker-ce-cli

# 2. Install Docker Compose
# Define the version (check for the latest stable version if needed)
ARG DOCKER_COMPOSE_VERSION=1.29.2
RUN curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
RUN chmod +x /usr/local/bin/docker-compose

# 3. Add jenkins user to the docker group (only works if the group exists, which it often does when mounting the socket)
# This is a precaution for permissions when accessing /var/run/docker.sock
RUN groupadd -f docker
RUN usermod -aG docker jenkins

# Switch back to the jenkins user
USER jenkins
