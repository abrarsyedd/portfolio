# Dockerfile.jenkins
# This image installs Docker CLI and Docker Compose Plugin inside Jenkins.

# Build Argument for GID Synchronization (Set during build command)
ARG DOCKER_GROUP_ID=988

FROM jenkins/jenkins:lts
USER root

# 1. Install necessary dependencies for Docker repository access (lsb-release, curl, gnupg)
RUN apt-get update && apt-get install -y \
    lsb-release ca-certificates curl gnupg \
    && rm -rf /var/lib/apt/lists/*

# 2. Setup Docker Repository inside the container
RUN install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# 3. Install Docker CLI and Compose Plugin (needed for running deploy steps) [2, 3]
RUN apt-get update && apt-get install -y docker-ce-cli docker-compose-plugin

# 4. CRITICAL: GID Synchronization
# Create the 'docker' group inside the container using the host's GID ($DOCKER_GROUP_ID)
# and add the non-root 'jenkins' user (UID 1000) to this group [1]
RUN groupadd -g $DOCKER_GROUP_ID docker && usermod -aG docker jenkins

USER jenkins
# Restore the secure, non-root user
